name: CloudHub 2.0 Deployment

on:
  push:
    branches: [ "master" ]
    
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENTID: ${{ secrets.CONNECTED_APP_CLIENTID }}
      CONNECTED_APP_CLIENTSECRETS: ${{ secrets.CONNECTED_APP_CLIENTSECRETS }}
      
    steps:
    - name: checkout code repo
      uses: actions/checkout@v3

    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
      
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package -s .maven/settings.xml

    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar

  upload:
    needs: build
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENTID: ${{ secrets.CONNECTED_APP_CLIENTID }}
      CONNECTED_APP_CLIENTSECRETS: ${{ secrets.CONNECTED_APP_CLIENTSECRETS }}
    
    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
    
    - name: Publish to Exchange 
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy \
         -s .maven/settings.xml \
         -Dmule.artifact=$artifactName \
       

  deploy:
    needs: upload
    runs-on: ubuntu-latest
    env:
      CONNECTED_APP_CLIENTID: ${{ secrets.CONNECTED_APP_CLIENTID }}
      CONNECTED_APP_CLIENTSECRETS: ${{ secrets.CONNECTED_APP_CLIENTSECRETS }}
    
    steps:    
    
    - uses: actions/checkout@v3
    
    - uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - uses: actions/download-artifact@master
      with:
        name: artifacts
        
    - name: Deploy to CloudHub 2.0
      run: artifactName=$(ls *.jar | head -1)
        mvn clean deploy -DmuleDeploy -s .maven/setttings.xml -Dmule.artifact=$artifactName
       
